diff --git a/configs/nanopim3_defconfig b/configs/nanopim3_defconfig
index 28a1cb1..82c271d 100644
--- a/configs/nanopim3_defconfig
+++ b/configs/nanopim3_defconfig
@@ -13,6 +13,7 @@ CONFIG_FIT=y
 # CONFIG_CMD_SETEXPR is not set
 # CONFIG_CMD_NET is not set
 # CONFIG_CMD_NFS is not set
+CONFIG_SPL=y
 CONFIG_CMD_FDISK=y
 CONFIG_CMD_EXT4_IMG_WRITE=y
 CONFIG_CMD_SD_RECOVERY=y
diff --git a/include/configs/s5p6818_nanopim3.h b/include/configs/s5p6818_nanopim3.h
index 3cfd95b..287b9e9 100644
--- a/include/configs/s5p6818_nanopim3.h
+++ b/include/configs/s5p6818_nanopim3.h
@@ -286,22 +286,82 @@
 #define CONFIG_FIT_BEST_MATCH
 #define CONFIG_OF_LIBFDT
 
-/*-----------------------------------------------------------------------
- * ENV
- */
-#define CONFIG_EXTRA_ENV_SETTINGS	\
-			"fdt_high=0xffffffffffffffff\0" \
-			"stdin=serial\0" \
-			"stdout=serial,vga\0" \
-			"stderr=serial,vga"
-
-#define CONFIG_BOOTARGS \
-    "console=ttySAC0,115200n8 initrd=0x49000000,0x2000000"
-
-#define CONFIG_BOOTCOMMAND	\
-	"echo Waiting for environment...;" \
-	"udown 0x48000000; " \
-	"env import -t -r 0x48000000; " \
-	"run bootcmd2"
-
-#endif /* __CONFIG_H__ */
+#define ENV_DEVICE_SETTINGS \
+		"stdin=serial,lcd\0" \
+	"stdout=serial,lcd\0" \
+	"stderr=serial,lcd\0"
+
+#define ENV_MEM_LAYOUT_SETTINGS \
+    "ramdisk_addr_r=0x49000000\0" \
+    "kernel_addr_r=0x48000000\0" \
+    "scriptaddr=0x47000000\0" \
+    "fdtfile=nexell/s5p6818-nanopi-m3.dtb\0" \
+    "fdt_addr_r=0x4a000000\0" \
+    "fdt_high=0xffffffffffffffff"
+
+#define BOOTCMDS_MMC \
+		"mmc_boot=" \
+		"setenv devtype mmc; " \
+		"if mmc dev ${devnum}; then " \
+			"run scan_boot; " \
+		"fi\0" \
+	"bootcmd_mmc0=setenv devnum 0; run mmc_boot;\0"
+#define BOOT_TARGETS_MMC "mmc0"
+
+#define BOOTCMDS_COMMON \
+		"rootpart=1\0" \
+	\
+	"do_script_boot="                                                 \
+		"load ${devtype} ${devnum}:${rootpart} "                  \
+			"${scriptaddr} ${prefix}${script}; "              \
+		"source ${scriptaddr}\0"                                  \
+	\
+	"script_boot="                                                    \
+		"for script in ${boot_scripts}; do "                      \
+			"if test -e ${devtype} ${devnum}:${rootpart} "    \
+					"${prefix}${script}; then "       \
+				"echo Found ${prefix}${script}; "         \
+				"run do_script_boot; "                    \
+				"echo SCRIPT FAILED: continuing...; "     \
+			"fi; "                                            \
+		"done\0"                                                  \
+	\
+	"do_sysboot_boot="                                                \
+		"sysboot ${devtype} ${devnum}:${rootpart} any "           \
+			"${scriptaddr} ${prefix}extlinux/extlinux.conf\0" \
+	\
+	"sysboot_boot="                                                   \
+		"if test -e ${devtype} ${devnum}:${rootpart} "            \
+				"${prefix}extlinux/extlinux.conf; then "  \
+			"echo Found ${prefix}extlinux/extlinux.conf; "    \
+			"run do_sysboot_boot; "                           \
+			"echo SCRIPT FAILED: continuing...; "             \
+		"fi\0"                                                    \
+	\
+	"scan_boot="                                                      \
+		"echo Scanning ${devtype} ${devnum}...; "                 \
+		"for prefix in ${boot_prefixes}; do "                     \
+			"run sysboot_boot; "                              \
+			"run script_boot; "                               \
+		"done\0"                                                  \
+	\
+	"boot_targets=" \
+		BOOT_TARGETS_MMC " " \
+		"\0" \
+	\
+	"boot_prefixes=/\0" \
+	\
+	"boot_scripts=boot.scr.uimg\0" \
+	\
+	BOOTCMDS_MMC
+
+#define CONFIG_BOOTCOMMAND \
+		"for target in ${boot_targets}; do run bootcmd_${target}; done"
+
+#define CONFIG_EXTRA_ENV_SETTINGS \
+	ENV_DEVICE_SETTINGS \
+	ENV_MEM_LAYOUT_SETTINGS \
+	BOOTCMDS_COMMON
+
+#include <config_distro_defaults.h>
+#endif
